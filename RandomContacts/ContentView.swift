//
//  ContentView.swift
//  RandomContacts
//
//  Created by Jinwoo Kim on 1/6/21.
//

import SwiftUI

struct ContentView: View {
    @ObservedObject private var viewModel: ContentViewModel = .init()
    
    private var trailingButtons: some View {
        HStack {
            Button("Delete") {
                viewModel.error = nil
                do {
                    try viewModel.deleteContacts()
                } catch {
                    viewModel.error = error
                }
                viewModel.isAlertPresented = true
            }
            
            Button("Save") {
                viewModel.error = nil
                do {
                    try viewModel.saveContacts()
                } catch {
                    viewModel.error = error
                }
                viewModel.isAlertPresented = true
            }
        }
    }
    
    internal var body: some View {
        NavigationView {
            VStack {
                HStack(alignment: .center, spacing: 0) {
                    Text("Count for '+82'")
                        .fontWeight(.heavy)
                        .frame(width: 140)
                        .padding()
                    TextField("", text: $viewModel.numberCountFor82)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .keyboardType(.numberPad)
                        .padding()
                }
                
                HStack(alignment: .center, spacing: 0) {
                    Text("Count for '+1'")
                        .fontWeight(.heavy)
                        .frame(width: 140)
                        .padding()
                    TextField("", text: $viewModel.numberCountFor1)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .keyboardType(.numberPad)
                        .padding()
                }
                
                Text("All contacts info are generated by random. You can delete them by pressing Delete button.")
                
                Spacer()
            }
            .navigationTitle("RandomContacts")
            .navigationBarItems(trailing: trailingButtons)
            .navigationViewStyle(StackNavigationViewStyle())
        }
        .alert(isPresented: $viewModel.isAlertPresented, content: {
            Alert(title: Text("Result"),
                  message: Text(viewModel.error?.localizedDescription ?? "Success!"),
                  dismissButton: .default(Text("Done"))
            )
        })
    }
}

#if DEBUG
struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
#endif
